/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/ckqcMVY6RJ5
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState, useMemo } from "react"

export function Results() {
  const [searchTerm, setSearchTerm] = useState("")
  const [data, setData] = useState({
    fileName: "STIX_2023-04-01.json",
    ipAddress: "192.168.1.100",
    hostname: "example.com",
    exploits: [
      {
        cveId: "CVE-2021-12345",
        description: "Vulnerability in the XYZ component allows remote code execution.",
      },
      {
        cveId: "CVE-2022-67890",
        description: "Flaw in the ABC library leads to denial of service.",
      },
      {
        cveId: "CVE-2023-54321",
        description: "Weakness in the PQR service enables privilege escalation.",
      },
    ],
  })
  const filteredExploits = useMemo(() => {
    return data.exploits.filter(
      (exploit) =>
        exploit.cveId.toLowerCase().includes(searchTerm.toLowerCase()) ||
        exploit.description.toLowerCase().includes(searchTerm.toLowerCase()),
    )
  }, [data.exploits, searchTerm])
  const handleDownload = () => {
    const csvData = [["CVE ID", "Description"], ...data.exploits.map((exploit) => [exploit.cveId, exploit.description])]
    const csvContent = csvData.map((row) => row.join(",")).join("\n")
    const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" })
    const url = URL.createObjectURL(blob)
    const link = document.createElement("a")
    link.setAttribute("href", url)
    link.setAttribute("download", "tardis_results.csv")
    document.body.appendChild(link)
    link.click()
    document.body.removeChild(link)
  }
  return (
    <div className="container mx-auto px-4 py-8 sm:px-6 lg:px-8">
      <div className="mb-8">
        <h1 className="text-2xl font-bold">TARDIS Threat Parser Results</h1>
      </div>
      <div className="mb-8 rounded-lg bg-white p-6 shadow">
        <h2 className="text-lg font-bold mb-4">File Information</h2>
        <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
          <div>
            <label className="text-gray-500 font-medium">File Name</label>
            <p>{data.fileName}</p>
          </div>
          <div>
            <label className="text-gray-500 font-medium">Vulnerable IP</label>
            <p>{data.ipAddress}</p>
          </div>
          <div>
            <label className="text-gray-500 font-medium">Hostname</label>
            <p>{data.hostname || "N/A"}</p>
          </div>
        </div>
      </div>
      <div className="mb-8 rounded-lg bg-white p-6 shadow">
        <h2 className="text-lg font-bold mb-4">Exploit Targets</h2>
        <div className="flex items-center mb-4">
          <input
            type="text"
            placeholder="Search by CVE or description"
            className="border border-gray-300 rounded-md px-4 py-2 flex-1 mr-4"
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
          />
          <button
            onClick={handleDownload}
            className="bg-primary text-primary-foreground rounded-md px-4 py-2 hover:bg-primary/90"
          >
            Download CSV
          </button>
        </div>
        {filteredExploits.length > 0 ? (
          <table className="w-full">
            <thead>
              <tr className="bg-gray-100">
                <th className="px-4 py-2 text-left">CVE ID</th>
                <th className="px-4 py-2 text-left">Description</th>
              </tr>
            </thead>
            <tbody>
              {filteredExploits.map((exploit, index) => (
                <tr key={index} className={`border-b ${index % 2 === 0 ? "bg-gray-50" : "bg-white"}`}>
                  <td className="px-4 py-2 font-medium text-primary">{exploit.cveId}</td>
                  <td className="px-4 py-2">{exploit.description}</td>
                </tr>
              ))}
            </tbody>
          </table>
        ) : (
          <p className="text-gray-500">No exploit targets found.</p>
        )}
      </div>
    </div>
  )
}
